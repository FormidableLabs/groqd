const { globSync } = require("glob");
const path = require("node:path");
const fs = require("node:fs/promises");

/**
 * fn to gather declaration files from groqd and zod so that we can
 *   load them into the monaco editor.
 */
const main = async () => {
  const contents = {
    NOTE: "This file is automatically generated via the gather-types script",
    extraLibs: [
      ...(await readExtraLibs("zod")),
      ...(await readExtraLibs("groqd/dist")),
      ...(await readExtraLibs("groq-builder/dist")),
      ...(await readExtraLibs("../src/arcade/playground-modules/playground")),
      ...(await readExtraLibs(
        "../src/arcade/playground-modules/playground/groq-builder"
      )),
    ],
  };

  await fs.writeFile(
    path.resolve(__dirname, "../src/types.json"),
    JSON.stringify(contents, null, 2)
  );
};

const readExtraLibs = async (packageName) => {
  const ROOT = path.resolve(__dirname, "../node_modules");
  const typeFiles = globSync(path.join(ROOT, packageName, "/**/*.d.ts"));

  const results = [];

  for (const typeFile of typeFiles) {
    const typeDefContents = await fs.readFile(typeFile, "utf8");
    results.push({
      filePath: path.relative(ROOT, typeFile),
      content: typeDefContents,
    });
  }

  return results;
};

main();
